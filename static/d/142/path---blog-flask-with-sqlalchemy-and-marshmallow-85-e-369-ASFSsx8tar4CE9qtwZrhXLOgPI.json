{"data":{"markdownRemark":{"id":"3b7984f6-f5b6-5157-a563-a8ef89dbd6e1","html":"<p><img src=\"/media/pixabay/flask-marshmallow-sqlalchemy.jpg\" alt=\"Flask with SQLAlchemy &#x26; Marshmallow\" title=\"Flask with SQLAlchemy &#x26; Marshmallow\">\n<a href=\"https://pixabay.com/photos/field-cereals-summer-sun-sunshine-192179/\"><center><span style=\"color:black\">Image Source</span></center></a></p>\n<p>In the article we will build a simple REST API using <strong>Flask</strong>, <strong>SQLAlchemy</strong> and <strong>Marshmallow</strong>. We will be building a note taking application where these two API endpoints <code class=\"language-text\">/note/</code> and <code class=\"language-text\">/note/&lt;id&gt;/</code> will be available. </p>\n<p>We will be able to create new note or get all the notes by doing a <strong>POST</strong> or a <strong>GET</strong> request to <code class=\"language-text\">/note/</code> api endpoint. Not only that we will be able to get the details of the note or update the note or delete the note with a <strong>GET</strong> or a  <strong>PATCH</strong> or a <strong>DELETE</strong> request to <code class=\"language-text\">/note/&lt;id&gt;/</code> api endpoint.</p>\n<p>First of all, we will give a brief descriptions of the libraries that we will be using in this article.</p>\n<p><strong><a href=\"https://palletsprojects.com/p/flask/\" title=\"Flask\">Flask</a></strong> is a lightweight WSGI web application framework in Python. It is designed to make getting started very quickly and very easily.</p>\n<p><strong><a href=\"https://marshmallow.readthedocs.io/en/stable/\" title=\"marshmallow\">marshmallow</a></strong> is an ORM/ODM/framework-agnostic library for converting complex datatypes, such as objects, to and from native Python datatypes.</p>\n<p><strong><a href=\"https://flask-marshmallow.readthedocs.io/en/latest/\" title=\"Flask-Marshmallow\">Flask-Marshmallow</a></strong> is a thin integration layer for Flask and marshmallow that adds additional features to marshmallow.</p>\n<p><strong><a href=\"https://www.sqlalchemy.org/\" title=\"SQLAlchemy\">SQLAlchemy</a></strong> is the Python SQL toolkit and Object Relational Mapper that gives application developers the full power and flexibility of SQL.</p>\n<p><strong><a href=\"https://flask-sqlalchemy.palletsprojects.com/\" title=\"Flask-SQLAlchemy\">Flask-SQLAlchemy</a></strong> is an extension for Flask that adds support for SQLAlchemy to your application. It aims to simplify using SQLAlchemy with Flask.</p>\n<p><strong><a href=\"https://marshmallow-sqlalchemy.readthedocs.io/en/latest/index.html\" title=\"marshmallow-sqlalchemy\">marshmallow-sqlalchemy</a></strong> An SQLAlchemy integration with the marshmallow (de)serialization library.</p>\n<p>We will be using pipenv as our dependency manager. We are asuming that pipenv is already installed in your system. </p>\n<p>Follow the steps bellow and at the end you will have a simple note application running on <a href=\"http://localhost:5000/\">http://localhost:5000/</a>.</p>\n<p><strong>Step 1: Setup Project Environment</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">pipenv <span class=\"token operator\">-</span><span class=\"token operator\">-</span>three</code></pre></div>\n<p><strong>Step 2: Install Flask and Other Dependencies</strong></p>\n<p>Run the following commands to install all the dependencies including Flask.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">pipenv install flask\npipenv install flask<span class=\"token operator\">-</span>marshmallow\npipenv install flask<span class=\"token operator\">-</span>sqlalchemy\npipenv install marshmallow<span class=\"token operator\">-</span>sqlalchemy</code></pre></div>\n<p>After running those commands marshmallow and SQLAlchemy will be install internally as a dependency.</p>\n<p><strong>Step 3: Create <code class=\"language-text\">app.py</code> file</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">touch app.py</code></pre></div>\n<p><strong>Step 4: Add Code to <code class=\"language-text\">app.py</code> file</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask\n\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n\n@app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">hello_world</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello, World!'</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>debug<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>    </code></pre></div>\n<p><strong>Step 5: Start pipenv Shell</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">pipenv shell</code></pre></div>\n<p><strong>Step 6: Run Flask Server</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">python app<span class=\"token punctuation\">.</span>py</code></pre></div>\n<p><strong>Step 7: Go to the Browser</strong></p>\n<p>Start your favurite browser and go to the <a href=\"http://localhost:5000/\">http://localhost:5000/</a> url and you will see <code class=\"language-text\">Hello, World!</code> printed.</p>\n<p><strong>Step 8: Integrate SQLAlchemy &#x26; Marshmallow</strong></p>\n<p>Add the following imports into the <code class=\"language-text\">app.py</code> file.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">from</span> flask_sqlalchemy <span class=\"token keyword\">import</span> SQLAlchemy\n<span class=\"token keyword\">from</span> flask_marshmallow <span class=\"token keyword\">import</span> Marshmallow</code></pre></div>\n<p>And add the following code after the creation of Flask app instance.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">basedir <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>abspath<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'SQLALCHEMY_DATABASE_URI'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'sqlite:///'</span><span class=\"token operator\">+</span> \\\n                os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>basedir<span class=\"token punctuation\">,</span> <span class=\"token string\">'db.sqlite3'</span><span class=\"token punctuation\">)</span>\n\ndb <span class=\"token operator\">=</span> SQLAlchemy<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span>\nma <span class=\"token operator\">=</span> Marshmallow<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span></code></pre></div>\n<p><strong>Step 9: Create Model</strong></p>\n<p>Declare the model like following.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">NoteModel</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>Integer<span class=\"token punctuation\">,</span> primary_key<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    title <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    content <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> title\n        self<span class=\"token punctuation\">.</span>content <span class=\"token operator\">=</span> content</code></pre></div>\n<p><strong>Step 10: Create Schema</strong></p>\n<p>Generate marshmallow schema from the model.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">NoteSchema</span><span class=\"token punctuation\">(</span>ma<span class=\"token punctuation\">.</span>SQLAlchemyAutoSchema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        model <span class=\"token operator\">=</span> NoteModel</code></pre></div>\n<p><strong>Step 11: Build Out API Actions</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/note/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">note_list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    all_notes <span class=\"token operator\">=</span> NoteModel<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> jsonify<span class=\"token punctuation\">(</span>notes_schema<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>all_notes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n@app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">'/note/'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">create_note</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    title <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    content <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n    note <span class=\"token operator\">=</span> NoteModel<span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span>title<span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span>content<span class=\"token punctuation\">)</span>\n    \n    db<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">)</span>\n    db<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">return</span> note_schema<span class=\"token punctuation\">.</span>jsonify<span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">)</span>\n\n\n@app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">'/note/&lt;int:note_id>/'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">note_detail</span><span class=\"token punctuation\">(</span>note_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    note <span class=\"token operator\">=</span> NoteModel<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>note_id<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> note_schema<span class=\"token punctuation\">.</span>jsonify<span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">)</span>\n\n\n@app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">'/note/&lt;int:note_id>/'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'PATCH'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">update_note</span><span class=\"token punctuation\">(</span>note_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    title <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    content <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n    note <span class=\"token operator\">=</span> NoteModel<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>note_id<span class=\"token punctuation\">)</span>\n    \n    note<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> title\n    note<span class=\"token punctuation\">.</span>content <span class=\"token operator\">=</span> content\n\n    db<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">)</span>\n    db<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> note_schema<span class=\"token punctuation\">.</span>jsonify<span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">)</span>\n\n\n@app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">'/note/&lt;int:note_id>/'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"DELETE\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">delete_note</span><span class=\"token punctuation\">(</span>note_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    note <span class=\"token operator\">=</span> NoteModel<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>note_id<span class=\"token punctuation\">)</span>\n    \n    db<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">)</span>\n    db<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> note_schema<span class=\"token punctuation\">.</span>jsonify<span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">)</span></code></pre></div>\n<p><strong>Step 12: Setup Database</strong></p>\n<p>Enter in python shell</p>\n<p><code class=\"language-text\">python</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span> <span class=\"token keyword\">from</span> app <span class=\"token keyword\">import</span> db\n<span class=\"token operator\">>></span> db<span class=\"token punctuation\">.</span>create_all<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><strong>Step 13: Test APIs</strong></p>\n<p>We can use the tool <a href=\"https://www.postman.com/\" title=\"Postman\">Postman</a> to test our APIs. But before that please ensure your development server is up and running using this command <code class=\"language-text\">python app.py</code> from <strong>Step 6</strong>.</p>\n<p><img src=\"/media/flask-with-sqlalchemy-and-marshmallow.png\" alt=\"Flask with SQLAlchemy &#x26; Marshmallow\" title=\"Flask with SQLAlchemy &#x26; Marshmallow\"></p>\n<p>The complete code of this article can be found on <a href=\"https://github.com/nahidsaikat/Flask-with-SQLAlchemy-and-Marshmallow\" title=\"GitHub\">this repository</a>.</p>","fields":{"slug":"/blog/flask-with-sqlalchemy-and-marshmallow/","tagSlugs":["/tag/flask/","/tag/rest-api/"]},"frontmatter":{"date":"2020-03-21T00:12:03.284Z","description":"In the article we will build a simple REST API using Flask, SQLAlchemy and Marshmallow. We will be building a note taking application where these two API endpoints /note/ and /note/<id>/ will be available.","tags":["Flask","REST-API"],"title":"Flask with SQLAlchemy & Marshmallow"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/flask-with-sqlalchemy-and-marshmallow/"}}