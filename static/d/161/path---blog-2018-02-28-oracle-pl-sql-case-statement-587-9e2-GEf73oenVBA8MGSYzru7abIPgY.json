{"data":{"markdownRemark":{"id":"6cb838e8-8b2f-575b-ae72-7e192669aa0c","html":"<p><img src=\"/media/pixabay/case-statement.jpg\" alt=\"PL/SQL Case Statement\" title=\"PL/SQL Case Statement\">\n<a href=\"https://pixabay.com/photos/branch-sunset-nature-tree-sunlight-1753745/\"><center><span style=\"color:black\">Image Source</span></center></a></p>\n<p><strong>Simple Case Statement</strong></p>\n<p>Oracle PL/SQL provides case statement control which is used in decision making. It has similarities with the IF statement control of PL/SQL. In case statement there is a selector, based on the evaluated value of the selector a block of statement will be executed. The selector will be executed only once. General form of simple case statement is follow.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token constant\">CASE</span> selector\n    <span class=\"token constant\">WHEN</span> expression_1 <span class=\"token constant\">THEN</span>\n        block_of_statements_1<span class=\"token punctuation\">;</span>\n    <span class=\"token constant\">WHEN</span> expression_2 <span class=\"token constant\">THEN</span>\n        block_of_statements_2<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token constant\">WHEN</span> expression_n <span class=\"token constant\">THEN</span>\n        block_of_statements_n<span class=\"token punctuation\">;</span>\n    <span class=\"token constant\">ELSE</span>\n        block_of_else_statement\n<span class=\"token keyword\">END</span> <span class=\"token constant\">CASE</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Case statements begins with the keyword CASE followed by a selector. After that a sequence of WHEN statements. WHEN statement begins with the WHEN keyword followed by a expression which returns a value. If selector value and WHEN expression value matched then block of statements after THEN keyword will be executed. After execution of the block of statement execution control will pass to the end of the case statement. Following is an example that prints a message based on the grade of a student. Point to be noted here that the selector can contains any data types other then BLOB, BFILE and composite types.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token constant\">CASE</span> grade\n    <span class=\"token constant\">WHEN</span> <span class=\"token string\">'A'</span> <span class=\"token constant\">THEN</span> dbms_output<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span>‘<span class=\"token constant\">Excellent!</span>’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token constant\">WHEN</span> <span class=\"token string\">'B'</span> <span class=\"token constant\">THEN</span> dbms_output<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span>‘<span class=\"token constant\">Very</span> <span class=\"token constant\">Good!</span>’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token constant\">WHEN</span> <span class=\"token string\">'C'</span> <span class=\"token constant\">THEN</span> dbms_output<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span>‘<span class=\"token constant\">Well</span> done<span class=\"token operator\">!</span>’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token constant\">WHEN</span> <span class=\"token string\">'D'</span> <span class=\"token constant\">THEN</span> dbms_output<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span>‘<span class=\"token constant\">You</span> have passed<span class=\"token operator\">!</span>’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token constant\">WHEN</span> <span class=\"token string\">'F'</span> <span class=\"token constant\">THEN</span> dbms_output<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span>‘<span class=\"token constant\">You</span> have failed<span class=\"token operator\">!</span>’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token constant\">ELSE</span> dbms_output<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span>‘<span class=\"token constant\">NOT</span> a grade<span class=\"token operator\">!</span>’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">END</span> <span class=\"token constant\">CASE</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Like the IF statement ELSE block is optional here. When specified ELSE block will be executed if no WHEN expression matched. If not specified Oracle add following line at the end of case statement.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token constant\">ELSE</span> <span class=\"token constant\">RAISE</span> <span class=\"token constant\">CASE_NOT_FOUND</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>That means there is always a ELSE block in every case statement. The exception that raised by ELSE block can be handled by normal exception handling process of Oracle PL/SQL.</p>\n<p><strong>Searched Case Statement</strong></p>\n<p>Searched case statement is little different from simple case statement. In searched case statement there is no selector. The statement block will be executed based on the evaluation value of WHEN clause. The result of the WHEN clause will be either true of false. If it is true, the statement block will be executed. Following is the implementation of the above example in searched case statement.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token constant\">CASE</span>\n    <span class=\"token constant\">WHEN</span> grade <span class=\"token operator\">=</span> <span class=\"token string\">'A'</span> <span class=\"token constant\">THEN</span> dbms_output<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span>‘<span class=\"token constant\">Excellent!</span>’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token constant\">WHEN</span> grade <span class=\"token operator\">=</span> <span class=\"token string\">'B'</span> <span class=\"token constant\">THEN</span> dbms_output<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span>‘<span class=\"token constant\">Very</span> <span class=\"token constant\">Good!</span>’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token constant\">WHEN</span> grade <span class=\"token operator\">=</span> <span class=\"token string\">'C'</span> <span class=\"token constant\">THEN</span> dbms_output<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span><span class=\"token string\">'Well done!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token constant\">WHEN</span> grade <span class=\"token operator\">=</span> <span class=\"token string\">'D'</span> <span class=\"token constant\">THEN</span> dbms_output<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span><span class=\"token string\">'You have passed!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token constant\">WHEN</span> grade <span class=\"token operator\">=</span> <span class=\"token string\">'F'</span> <span class=\"token constant\">THEN</span> dbms_output<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span><span class=\"token string\">'You have failed!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token constant\">ELSE</span> dbms_output<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span><span class=\"token string\">'NOT a grade!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">END</span> <span class=\"token constant\">CASE</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Like the simple case statement ELSE block is optional in searched case statement. If it is omitted then Oracle PL/SQL will add following line at the end.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token constant\">ELSE</span> <span class=\"token constant\">RAISE</span> <span class=\"token constant\">CASE_NOT_FOUND</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Case Expression</strong></p>\n<p>This is another types of case statement. Case expression returns a value. All WHEN expression must be associated with one statement. Case expression does not end with END CASE or semicolon. The key word END indicates the end of case expression.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token constant\">DECLARE</span>\n    bonus_amount <span class=\"token constant\">NUMBER</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">BEGIN</span>\n    bonus_amount <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> <span class=\"token number\">30000</span><span class=\"token punctuation\">;</span>\n    <span class=\"token constant\">CASE</span>\n        <span class=\"token constant\">WHEN</span> salary <span class=\"token operator\">>=</span> <span class=\"token number\">10000</span> <span class=\"token constant\">AND</span> salary <span class=\"token operator\">&lt;=</span><span class=\"token number\">20000</span> <span class=\"token constant\">THEN</span> <span class=\"token number\">1500</span>\n        <span class=\"token constant\">WHEN</span> salary <span class=\"token operator\">></span> <span class=\"token number\">20000</span> <span class=\"token constant\">AND</span> salary <span class=\"token operator\">&lt;=</span> <span class=\"token number\">40000</span> <span class=\"token constant\">THEN</span> <span class=\"token number\">1000</span>\n        <span class=\"token constant\">WHEN</span> salary <span class=\"token operator\">></span> <span class=\"token number\">40000</span> <span class=\"token constant\">THEN</span> <span class=\"token number\">500</span>\n    <span class=\"token constant\">ELSE</span> <span class=\"token number\">0</span> <span class=\"token keyword\">END</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">END</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">/</span></code></pre></div>\n<p>Unlike the case statements discussed above case expression does not raise any exception if no WHEN clause matched. If no WHEN clause match the case expression returns NULL.</p>\n<p><a href=\"https://www.nahidsaikat.com/tag/oracle-db/\" title=\"Oracle DB - Nahid Saikat\">Visit here</a> for other oracle database related post.\nLearn Oracle Database basics from <a href=\"http://www.oracle.com/webfolder/technetwork/tutorials/obe/db/12c/r1/odb_quickstart/odb_quick_start.html\" title=\"Oracle Database Quick Start\">here</a>.</p>","fields":{"slug":"/blog/2018/02/28/oracle-pl-sql-case-statement/","tagSlugs":["/tag/pl-sql/","/tag/oracle-db/","/tag/language/"]},"frontmatter":{"date":"2018-02-28T22:12:03.284Z","description":"Oracle PL/SQL provides case statement control which is used in decision making. It has similarities with the IF statement control of PL/SQL. In case statement there is a selector, ","tags":["PL/SQL","Oracle DB","Language"],"title":"Oracle PL/SQL Case Statement"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/2018/02/28/oracle-pl-sql-case-statement/"}}