{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/blog/2018/02/28/oracle-pl-sql-case-statement/","categorySlug":"/category/database/"},"frontmatter":{"title":"Oracle PL/SQL Case Statement","date":"2018-02-28T22:12:03.284Z","category":"Database","description":"Oracle PL/SQL provides case statement control which is used in decision making. It has similarities with the IF statement control of PL/SQL. In case statement there is a selector, "}}},{"node":{"fields":{"slug":"/blog/2018/02/11/oracle-pl-sql-conditions/","categorySlug":"/category/database/"},"frontmatter":{"title":"Oracle PL/SQL Conditions","date":"2018-02-11T22:12:03.284Z","category":"Database","description":"Controlling the flow of execution is common in programming. It is very much needed to direct the flow of program based on some conditions. This can be done in any programming language by IF statements."}}},{"node":{"fields":{"slug":"/blog/2018/01/29/oracle-pl-sql-blocks/","categorySlug":"/category/database/"},"frontmatter":{"title":"Oracle PL/SQL Blocks","date":"2018-01-29T22:12:03.284Z","category":"Database","description":"PL/SQL is a block structured language. Everything written in PL/SQL are divided in logical blocks. Each blocks has three parts declaration sections, executable sections and exception handling sections."}}},{"node":{"fields":{"slug":"/blog/2017/12/30/encapsulation/","categorySlug":"/category/programming-paradism/"},"frontmatter":{"title":"Encapsulation (OOP)","date":"2017-12-30T22:12:03.284Z","category":"Programming Paradism","description":"Encapsulation is the process that binds data and functions which operates on the data under a single entity. It is one of the most important four features of Object Oriented Programming."}}},{"node":{"fields":{"slug":"/blog/2017/11/12/inheritance/","categorySlug":"/category/programming-paradism/"},"frontmatter":{"title":"Inheritance (OOP)","date":"2017-12-30T22:12:03.284Z","category":"Programming Paradism","description":"Inheritance is the process of acquiring the properties and functionalities of another class. An object is a container that contains properties and methods to operate of these properties."}}},{"node":{"fields":{"slug":"/blog/2017/12/22/polymorphism/","categorySlug":"/category/programming-paradism/"},"frontmatter":{"title":"Polymorphism (OOP)","date":"2017-12-22T22:12:03.284Z","category":"Programming Paradism","description":"Polymorphism is one of the most important concepts of object oriented programming. It comes from two Greek words, Poly and Morph. Poly means Many and Morph means Form."}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"currentPage":0,"postsLimit":6,"postsOffset":0,"prevPagePath":"/","nextPagePath":"/page/1","hasPrevPage":false,"hasNextPage":true}}