{"data":{"markdownRemark":{"id":"ac609bb1-b908-552d-a956-c71f800b72d9","html":"<p><img src=\"/media/pixabay/conditions.jpg\" alt=\"Oracle PL/SQL Conditions\" title=\"Oracle PL/SQL Conditions\">\n<a href=\"https://pixabay.com/photos/autumn-leaves-branch-bright-3846345/\"><center><span style=\"color:black\">Image Source</span></center></a></p>\n<p>Controlling the flow of execution is common in programming. It is very much needed to direct the flow of program based on some conditions. This can be done in any programming language by IF statements. Oracle PL/SQL also has if statement. Oracle supports three kinds of IF statements. Simple IF THEN END IF statement, IF THEN ELSE END IF statement and IF THEN ELSIF ELSE END IF statement.</p>\n<p><strong>IF THEN END IF:</strong> This is the most simple IF statement. The IF keyword is followed by a condition, if the condition is true then the statements between THEN and END IF will get executed. Otherwise the statements will be skipped and execution will continue from the statements immediately after END IF.</p>\n<p>General form of IF THEN END IF is following</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token constant\">IF</span> conditions <span class=\"token constant\">THEN</span>\n  <span class=\"token constant\">Statements</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">END</span> <span class=\"token constant\">IF</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The following code will show ‘Excellent’ if the grade is ‘A’.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token constant\">DECLARE</span>\n  grade <span class=\"token constant\">VARCHAR2</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">BEGIN</span>\n  <span class=\"token constant\">IF</span> grade <span class=\"token operator\">=</span> <span class=\"token string\">'A'</span> <span class=\"token constant\">THEN</span>\n    dbms_output<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span><span class=\"token string\">'Excellent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">END</span> <span class=\"token constant\">IF</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">END</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">/</span></code></pre></div>\n<p><img src=\"/media/pl_sql/if-end-if.png\" alt=\"IF THEN END IF Statement\" title=\"IF THEN END IF Statement\">\n<strong><center>Figure 1: IF THEN END IF Statement</center></strong></p>\n<p><strong>IF THEN ELSE END IF:</strong> This kind of IF statement provides bi-directional flow of execution. There are two blocks of statement here. One is between THEN and ELSE keywords and other is between ELSE and END IF keywords. When the condition between the IF and THEN keywords is true statements between THEN and ELSE will get executed. If the condition is false then the statements between ELSE and END IF will get executed.</p>\n<p>The general form of this kind of IF statement is</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token constant\">IF</span> condition <span class=\"token constant\">THEN</span>\n  <span class=\"token constant\">Statements</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">ELSE</span>\n  <span class=\"token constant\">Statements</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">END</span> <span class=\"token constant\">IF</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The following program will show if a student is passed or not.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token constant\">DECLARE</span>\n  stu_mark <span class=\"token constant\">NUMBER</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">BEGIN</span>\n  <span class=\"token constant\">IF</span> stu_mark <span class=\"token operator\">&lt;</span> <span class=\"token number\">40</span> <span class=\"token constant\">THEN</span>\n    dbms_output<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span><span class=\"token string\">'Student is not passed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token constant\">ELSE</span>\n    dbms_output<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span><span class=\"token string\">'Student is passed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">END</span> <span class=\"token constant\">IF</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">END</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">/</span></code></pre></div>\n<p><img src=\"/media/pl_sql/if-then-else-end-if.png\" alt=\"IF THEN ELSE END IF Statement\" title=\"IF THEN ELSE END IF Statement\">\n<strong><center>Figure 2: IF THEN ELSE END IF Statement</center></strong></p>\n<p><strong>IF THEN ELSIF ELSE END IF:</strong> This is the last kind of IF statement. It is little bit complex IF statement. It contains multiple conditions and multiple block of statements. Based on the value of the conditions one block statement will get executed. The program will check conditions from top to bottom. When ever any condition matched it stops checking the conditions and execute the statements in that block and exits the IF statements. If no condition returns a true value then the ELSE statements will be executed.</p>\n<p>The general form of this IF statement is</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token constant\">IF</span> condition <span class=\"token constant\">THEN</span>\n  <span class=\"token constant\">Statements</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">ELSIF</span> condition <span class=\"token constant\">THEN</span>\n  <span class=\"token constant\">Statements</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">ELSE</span>\n  <span class=\"token constant\">Statements</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">END</span> <span class=\"token constant\">IF</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The ELSE statement is optional. If not present and no condition returns true value then no statements will get executed.</p>\n<p>The following programs shows message based on the grade of a student.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token constant\">DECLARE</span>\n  grade <span class=\"token constant\">VARCHAR2</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">BEGIN</span>\n  <span class=\"token constant\">IF</span> grade <span class=\"token operator\">=</span> <span class=\"token string\">'A'</span> <span class=\"token constant\">THEN</span>\n    dbms_output<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span><span class=\"token string\">'Excellent!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token constant\">ELSIF</span> grade <span class=\"token operator\">=</span> <span class=\"token string\">'B'</span> <span class=\"token constant\">THEN</span>\n    dbms_output<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span><span class=\"token string\">'Very Good!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token constant\">ELSIF</span> grade <span class=\"token operator\">=</span> <span class=\"token string\">'C'</span> <span class=\"token constant\">THEN</span>\n    dbms_output<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span><span class=\"token string\">'Well done!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token constant\">ELSIF</span> grade <span class=\"token operator\">=</span> <span class=\"token string\">'D'</span> <span class=\"token constant\">THEN</span>\n    dbms_output<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span><span class=\"token string\">'You have passed!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token constant\">ELSIF</span> grade <span class=\"token operator\">=</span> <span class=\"token string\">'F'</span> <span class=\"token constant\">THEN</span>\n    dbms_output<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span><span class=\"token string\">'You have failed!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token constant\">ELSE</span>\n    dbms_output<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span><span class=\"token string\">'NOT a grade!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">END</span> <span class=\"token constant\">IF</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">END</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">/</span></code></pre></div>\n<p><img src=\"/media/pl_sql/if-then-elseif-else-end-if.png\" alt=\"IF THEN ELSIF ELSE END IF Statement\" title=\"IF THEN ELSIF ELSE END IF Statement\">\n<strong><center>Figure 3: IF THEN ELSIF ELSE END IF Statement</center></strong></p>\n<p><a href=\"https://www.nahidsaikat.com/tag/oracle-db/\" title=\"Oracle DB - Nahid Saikat\">Visit here</a> for other oracle database related post.\nLearn Oracle Database basics from <a href=\"http://www.oracle.com/webfolder/technetwork/tutorials/obe/db/12c/r1/odb_quickstart/odb_quick_start.html\" title=\"Oracle Database Quick Start\">here</a>.</p>","fields":{"slug":"/blog/2018/02/11/oracle-pl-sql-conditions/","tagSlugs":["/tag/pl-sql/","/tag/oracle-db/","/tag/language/"]},"frontmatter":{"date":"2018-02-11T22:12:03.284Z","description":"Controlling the flow of execution is common in programming. It is very much needed to direct the flow of program based on some conditions. This can be done in any programming language by IF statements.","tags":["PL/SQL","Oracle DB","Language"],"title":"Oracle PL/SQL Conditions"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/2018/02/11/oracle-pl-sql-conditions/"}}